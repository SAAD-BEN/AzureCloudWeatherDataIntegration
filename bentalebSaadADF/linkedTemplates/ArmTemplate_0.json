{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bentalebSaadADF"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"bentalebAzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bentalebAzureBlobStorage'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bentalebAzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('bentalebAzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datedimcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bentalebAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "originalData"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "datedim.csv",
						"container": "bentalebdatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateID",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bentalebAzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datedimcsvCleaned')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bentalebAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "cleanedData"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "regiondimcsvCleaned.csv",
						"container": "bentalebdatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bentalebAzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/regiondimcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bentalebAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "originalData"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "regiondim.csv",
						"container": "bentalebdatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "RegionID",
						"type": "String"
					},
					{
						"name": "RegionName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bentalebAzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/regiondimcsvCleaned')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bentalebAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "cleanedData"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "regiondimcsvCleaned.csv",
						"container": "bentalebdatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bentalebAzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weathermetricscsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bentalebAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "originalData"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "weathermetrics.csv",
						"container": "bentalebdatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateID",
						"type": "String"
					},
					{
						"name": "RegionID",
						"type": "String"
					},
					{
						"name": "AverageTemperature",
						"type": "String"
					},
					{
						"name": "Humidity",
						"type": "String"
					},
					{
						"name": "WindSpeed",
						"type": "String"
					},
					{
						"name": "Rainfall",
						"type": "String"
					},
					{
						"name": "SunshineHours",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bentalebAzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/weathermetricscsvCLeaned')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bentalebAzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "cleanedData"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "weathermetricscsvCLeaned.csv",
						"container": "bentalebdatafiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bentalebAzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "weathermetricscsv",
								"type": "DatasetReference"
							},
							"name": "weathermetricscsv"
						},
						{
							"dataset": {
								"referenceName": "datedimcsv",
								"type": "DatasetReference"
							},
							"name": "datedimcsv"
						},
						{
							"dataset": {
								"referenceName": "regiondimcsv",
								"type": "DatasetReference"
							},
							"name": "regiondimcsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "weathermetricscsvCLeaned",
								"type": "DatasetReference"
							},
							"name": "weathermetricscsvCleaned"
						},
						{
							"dataset": {
								"referenceName": "datedimcsvCleaned",
								"type": "DatasetReference"
							},
							"name": "datedimcsvCleaned"
						},
						{
							"dataset": {
								"referenceName": "regiondimcsvCleaned",
								"type": "DatasetReference"
							},
							"name": "regiondimcsvCleaned"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          DateID as integer,",
						"          RegionID as integer,",
						"          AverageTemperature as integer,",
						"          Humidity as integer,",
						"          WindSpeed as integer,",
						"          Rainfall as integer,",
						"          SunshineHours as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> weathermetricscsv",
						"source(output(",
						"          DateID as integer,",
						"          Date as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> datedimcsv",
						"source(output(",
						"          RegionID as integer,",
						"          RegionName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> regiondimcsv",
						"weathermetricscsv sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     emptyLinesAsHeader: 1,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> weathermetricscsvCleaned",
						"datedimcsv sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     emptyLinesAsHeader: 1,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> datedimcsvCleaned",
						"regiondimcsv sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     emptyLinesAsHeader: 1,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> regiondimcsvCleaned"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/weathermetricscsv')]",
				"[concat(variables('factoryId'), '/datasets/datedimcsv')]",
				"[concat(variables('factoryId'), '/datasets/regiondimcsv')]",
				"[concat(variables('factoryId'), '/datasets/weathermetricscsvCLeaned')]",
				"[concat(variables('factoryId'), '/datasets/datedimcsvCleaned')]",
				"[concat(variables('factoryId'), '/datasets/regiondimcsvCleaned')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"weathermetricscsv": {},
									"datedimcsv": {},
									"regiondimcsv": {},
									"weathermetricscsvCleaned": {},
									"datedimcsvCleaned": {},
									"regiondimcsvCleaned": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-19T14:16:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}