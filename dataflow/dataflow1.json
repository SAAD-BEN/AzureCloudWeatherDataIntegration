{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "weathermetricscsv",
						"type": "DatasetReference"
					},
					"name": "weathermetricscsv"
				},
				{
					"dataset": {
						"referenceName": "datedimcsv",
						"type": "DatasetReference"
					},
					"name": "datedimcsv"
				},
				{
					"dataset": {
						"referenceName": "regiondimcsv",
						"type": "DatasetReference"
					},
					"name": "regiondimcsv"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "bentalebAzureBlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "weathermetricscsvCleaned"
				},
				{
					"linkedService": {
						"referenceName": "bentalebAzureBlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "datedimcsvCleaned"
				},
				{
					"linkedService": {
						"referenceName": "bentalebAzureBlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "regiondimcsvCleaned"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          DateID as integer,",
				"          RegionID as integer,",
				"          AverageTemperature as integer,",
				"          Humidity as integer,",
				"          WindSpeed as integer,",
				"          Rainfall as integer,",
				"          SunshineHours as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> weathermetricscsv",
				"source(output(",
				"          DateID as integer,",
				"          Date as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> datedimcsv",
				"source(output(",
				"          RegionID as integer,",
				"          RegionName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> regiondimcsv",
				"weathermetricscsv sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'bentalebdatafiles',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     partitionFileNames:['weathermetricscsvCLeaned'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> weathermetricscsvCleaned",
				"datedimcsv sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'bentalebdatafiles',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     partitionFileNames:['datedimcsvCleaned'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> datedimcsvCleaned",
				"regiondimcsv sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'bentalebdatafiles',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     partitionFileNames:['regiondimcsvCleaned'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> regiondimcsvCleaned"
			]
		}
	}
}